{"version":3,"file":"src_app_login_login_module_ts-es2015.js","mappings":"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","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"../@core/services/auth.service\";\r\nimport { ConnectionService } from \"../@core/services/connection.service\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { UserToken } from \"../@core/data/user-token\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: String;\r\n  password: String;\r\n  msg: String;\r\n  loader = false;\r\n  disableSubmit;\r\n  conn;\r\n  userID;\r\n\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    public cs: ConnectionService,\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    // this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: [\"\", Validators.required], // Username field\r\n      password: [\"\", Validators.required], // Password field\r\n    });\r\n  }\r\n\r\n  enableForm() {\r\n    this.form.controls[\"username\"].enable(); // Enable username field\r\n    this.form.controls[\"password\"].enable(); // Enable password field\r\n  }\r\n\r\n  disableForm() {\r\n    this.form.controls[\"username\"].disable(); // Disable username field\r\n    this.form.controls[\"password\"].disable(); // Disable password field\r\n  }\r\n  Submit() {\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password,\r\n    };\r\n  }\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    const user = {\r\n      username: this.form.get(\"username\").value, // Username input field\r\n      password: this.form.get(\"password\").value, // Password input field\r\n    };\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe((token: any) => {\r\n      //Check if response was a success or error\r\n      if (!token.success) {\r\n        this.authService.makeToast(\r\n          \"danger\",\r\n          \"Failed Logging in\",\r\n          token.message\r\n        );\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n      } else {\r\n        let decoded = jwt_decode<UserToken>(token.token);\r\n        this.authService.makeToast(\"success\", \"Success\", token.message);\r\n        this.authService.storeUserData(token.token, decoded);\r\n        if (this.authService.CurrentlyloggedIn()) {\r\n          // this.authService.loggingIn(decoded.role);\r\n          this.router.navigate([\"admin\"]);\r\n        } else {\r\n          this.authService.logout();\r\n          this.router.navigate([\"login\"]); // Navigate to dashboard view\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<nb-layout>\r\n  <nb-layout-column>\r\n    <div\r\n      class=\"wrapper login-background\"\r\n      style=\"\r\n        background: url('https://source.unsplash.com/1920x2400?nature,river,ocean')\r\n          no-repeat center center fixed;\r\n        background-size: cover;\r\n      \"\r\n    >\r\n      <div class=\"login-form container\">\r\n        <h2>Personal Decentralized File Drive</h2>\r\n        <form [formGroup]=\"form\" (submit)=\"onLoginSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label style=\"color: white\" for=\"username\">Username</label>\r\n            <div\r\n              [ngClass]=\"{\r\n                'has-error':\r\n                  form.controls.username.errors && form.controls.username.dirty,\r\n                'has-success':\r\n                  form.controls.username.valid && form.controls.username.dirty\r\n              }\"\r\n            >\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                formControlName=\"username\"\r\n                autocomplete=\"off\"\r\n                webauthn\r\n              />\r\n              <ul class=\"help-block\">\r\n                <span\r\n                  style=\"color: red\"\r\n                  *ngIf=\"\r\n                    form.controls.username.errors?.required &&\r\n                    form.controls.username.dirty\r\n                  \"\r\n                >\r\n                  This field is required.\r\n                </span>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label style=\"color: white\" for=\"password\">Password</label>\r\n            <div\r\n              [ngClass]=\"{\r\n                'has-error':\r\n                  form.controls.password.errors && form.controls.password.dirty,\r\n                'has-success':\r\n                  form.controls.password.valid && form.controls.password.dirty\r\n              }\"\r\n            >\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                formControlName=\"password\"\r\n                autocomplete=\"new-password\"\r\n                webauthn\r\n              />\r\n              <ul class=\"help-block\">\r\n                <span\r\n                  style=\"color: red\"\r\n                  *ngIf=\"\r\n                    form.controls.password.errors?.required &&\r\n                    form.controls.password.dirty\r\n                  \"\r\n                >\r\n                  This field is required.\r\n                </span>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <button\r\n            [disabled]=\"!form.valid || processing\"\r\n            class=\"btn btn-primary\"\r\n            type=\"submit\"\r\n            value=\"Login\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </nb-layout-column>\r\n</nb-layout>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\nimport { ThemeModule } from '../@theme/theme.module';\r\nimport { NbSpinnerModule } from '@nebular/theme';\r\nimport { NbCardModule, NbButtonModule } from '@nebular/theme';\r\nimport { NbLayoutModule } from '@nebular/theme';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ThemeModule,\r\n    NbSpinnerModule,\r\n    NbCardModule,\r\n    NbLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NbButtonModule,\r\n  ],\r\n  declarations: [LoginComponent]\r\n})\r\nexport class LoginModule { }\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n"],"names":[],"sourceRoot":"webpack:///"}